#ID:

aws sts get-caller-identity
{
    "UserId": "AIDAU5DNLV2R2SHC464BQ",
    "Account": "337384287907",
    "Arn": "arn:aws:iam::337384287907:user/upgradsriramtejapaladi"
}

_______________________________________________________________________________________________
# Outputs

Availablity_Zones_ = tolist([
  "us-east-1a",
  "us-east-1b",
])
dynamodb_table_arn = "arn:aws:dynamodb:us-east-1:337384287907:table/psrt_terraform_state"
dynamodb_table_id = "psrt_terraform_state"
nat_public_ips_ = tolist([
  "44.199.6.133",
])
private_subnets_ = [
  "subnet-08df49879b0739a91",
  "subnet-07c4d76f5eccea8a5",
]
public_subnets_ = [
  "subnet-0466b0f77c80a1986",
  "subnet-0290b9ef779096c16",
]
region = "us-east-1"
s3_bucket_arn = "arn:aws:s3:::psrteja-capstone-backend-tf"
s3_bucket_id = "psrteja-capstone-backend-tf"
security_group_id1 = "sg-0f882ecf05c2cf613"
security_group_id2 = "sg-05daecc4ffa698a25"
security_group_id_all = "sg-0a29a5f06d367b2db"
security_group_name1 = "worker_group_mgmt_one20211127160612466300000002"
security_group_name2 = "worker_group_mgmt_two20211127160615061300000003"
security_group_name_all = "all_worker_management20211127160611968100000001"
vpc_arn = "arn:aws:ec2:us-east-1:337384287907:vpc/vpc-00f194bb427b0c7f2"
vpc_cidr_block_ = "10.0.0.0/16"
vpc_id_ = "vpc-00f194bb427b0c7f2"

_______________________________________________________________________________________________
#Changes

In my-eks-conf.yaml file:
vpc
public_subnets
private_subnets
subnets

role name in command:
aws iam attach-role-policy \
  --role-name <role name of aws alb controller policy> \
  --policy-arn arn:aws:iam::337384287907:policy/AWSLoadBalancerControllerAdditionalIAMPolicy


_______________________________________________________________________________________________
#Autoscalar
{
    "Policy": {
        "PolicyName": "AmazonEKSClusterAutoscalerPolicy",
        "PolicyId": "ANPAU5DNLV2RRRMSW5WQO",
        "Arn": "arn:aws:iam::337384287907:policy/AmazonEKSClusterAutoscalerPolicy",
        "Path": "/",
        "DefaultVersionId": "v1",
        "AttachmentCount": 0,
        "PermissionsBoundaryUsageCount": 0,
        "IsAttachable": true,
        "CreateDate": "2021-11-20T18:52:00+00:00",
        "UpdateDate": "2021-11-20T18:52:00+00:00"
    }
}


_______________________________________________________________________________________________

root@legion:/home/teja/teja/git/kubernetes-tutorials-master# aws ec2 create-volume --region us-east-1 --availability-zone=us-east-1a --size=11 --volume-type=gp2
{
    "AvailabilityZone": "us-east-1a",
    "CreateTime": "2021-11-27T13:30:58+00:00",
    "Encrypted": false,
    "Size": 11,
    "SnapshotId": "",
    "State": "creating",
    "VolumeId": "vol-0a7311b3fac5733b9",
    "Iops": 100,
    "Tags": [],
    "VolumeType": "gp2",
    "MultiAttachEnabled": false
}


_______________________________________________________________________________________________
#Creates

#Task 1

terraform identity

terraform apply -auto-approve


#Task 3
aws ec2 create-volume --region us-east-1 --availability-zone=us-east-1a --size=11 --volume-type=gp2

aws ec2 attach-volume --device /dev/xvdf --instance-id <MASTER NODE ID> --volume-id <YOUR VOLUME ID>



kubectl create -f pv.yaml

kubectl create -f pvc.yaml

kubectl create -f configmap-redis.yaml

kubectl create -f stateful-redis.yaml

kubectl create -f redis-deployment.yaml

# redis-cli -h redis -p 80

kubectl describe po -l=app=redis-cli

kubectl exec -it redis-cli-c5f789cc9-hb6m5 sh -n demo

redis-cli -h redis -p 6379

SET foo 1

GET foo

kubectl rollout restart deployment [deployment_name]

kubectl rollout restart deployment redis-cli -n demo

# kubectl rollout restart deployment redis-cli

_______________________________________________________________________________________________

#Deletes



# kubectl delete all --all

# kubectl delete all --all -n {namespace}

kubectl delete all --all -n demo

make delete_application

eksctl delete cluster --config-file=my-eks-conf.yaml

terraform destroy -auto-approve

_______________________________________________________________________________________________
#Resources

#Statefulset
https://kubernetes.io/docs/tutorials/stateful-application/cassandra/#using-a-statefulset-to-create-a-cassandra-ring

#configMap
https://matthewpalmer.net/kubernetes-app-developer/articles/configmap-example-yaml.html

#Persistent Volume
https://www.nebulaworks.com/insights/posts/leveraging-aws-ebs-for-kubernetes-persistent-volumes/
